<UserControl
    x:Class="HVCC.Prototype2.Header"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:p2="clr-namespace:HVCC.Prototype2">
    <UserControl.Resources>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#ebf6ff" Offset="0.0" />
                    <GradientStop Color="#cfeaff" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#bddef7" Offset="0.0" />
                    <GradientStop Color="#bddef7" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0" />
                    <GradientStop Color="#d2ecff" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SelectedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#e3f3ff" Offset="0.0" />
                    <GradientStop Color="#d2ecff" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0" />
                    <GradientStop Color="#CCC" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0" />
                    <GradientStop Color="#EEE" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0" />
                    <GradientStop Color="#AAA" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0" />
                    <GradientStop Color="#EEE" Offset="0.1" />
                    <GradientStop Color="#EEE" Offset="0.9" />
                    <GradientStop Color="#FFF" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#333333" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#f4faff" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#d2ecff" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0" />
                    <GradientStop Color="#444" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0" />
                    <GradientStop Color="#000" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0" />
                    <GradientStop Color="#888" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#bddef7" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#333333" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

        <Style x:Key="BCMenu" TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="#555555" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">

                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
            <Setter Property="Height" Value="1" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border SnapsToDevicePixels="True" BorderBrush="{StaticResource StandardBorderColor}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
            <Border x:Name="Border3" BorderThickness="1" BorderBrush="{x:Null}" CornerRadius="3" Margin="0,5,0,5" Padding="5">

                <StackPanel Orientation="Horizontal">

                    <ContentPresenter Grid.Column="0" Name="Icon" Margin="0,-2,3,0" HorizontalAlignment="Left" VerticalAlignment="Top" ContentSource="Icon" />
                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" ContentSource="Header" RecognizesAccessKey="True" />
                    <Border Name="path_arrow"  Width="10" Visibility="Visible" Grid.Column="3" HorizontalAlignment="Left" Margin="5,5,0,0">
                        <Path VerticalAlignment="Top" Margin="0,0,0,0"  HorizontalAlignment="Left" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}">
                            <Path.LayoutTransform>
                                <RotateTransform Angle="90" CenterX="0" CenterY="0" />
                            </Path.LayoutTransform>
                        </Path>
                    </Border>
                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" VerticalOffset="5" HorizontalOffset="-6">
                        <Border Name="SubmenuBorder" Margin="5" SnapsToDevicePixels="True" Background="{StaticResource HVLightBlue}" BorderBrush="{StaticResource StandardBorderColor}" BorderThickness="1">

                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>

                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border3" Property="Background" Value="{StaticResource MenuGradient}" />
                    <Setter TargetName="Border3" Property="BorderThickness" Value="1" />
                    <Setter TargetName="Border3" Property="BorderBrush" Value="{StaticResource HVBlue}" />
                </Trigger>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.IsOpen" Value="True">
                    <Setter TargetName="Border3" Property="BorderBrush" Value="{StaticResource StandardBorderColor}" />
                    <Setter TargetName="Border3" Property="BorderThickness" Value="1,1,1,0" />
                    <Setter TargetName="Border3" Property="CornerRadius" Value="3,3,0,0" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,5,5" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="path_arrow" Property="Visibility" Value="Collapsed" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border">
                <ContentPresenter Margin="0,0,0,0" ContentSource="Header" RecognizesAccessKey="True" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuGradient}" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Padding="5,5,5,5">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter Name="Icon" Margin="0,0,9,0" VerticalAlignment="Center" ContentSource="Icon" />
                    <Border Name="Check"  Width="13" Height="13" Visibility="Collapsed" Margin="5,0,5,0" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                        <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.FontWeight="Normal" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#ffffff" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Padding="5,5,5,5">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter Name="Icon" Margin="5,0,5,0" VerticalAlignment="Center" ContentSource="Icon" />
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.FontWeight="Normal" ContentSource="Header" RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
                    <Path Margin="0,3,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}" />
                    <Popup Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" VerticalOffset="-7" HorizontalOffset="3">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource HVLightBlue}" BorderBrush="{StaticResource HVBlue}" BorderThickness="1">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#ffffff" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->

        <Style x:Key="MenuStyle" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="DeviceItemMenuTemplate" DataType="item">
            <MenuItem Uid="{Binding XPath=@id}" IsEnabled="{Binding XPath=@isEnabled}" Header="{Binding XPath=name}">
                <MenuItem.Icon>
                    <p2:PixelSnappedImage Source="{Binding XPath=image}" Width="16" Height="16" />
                </MenuItem.Icon>
            </MenuItem>
        </DataTemplate>

        <DataTemplate x:Key="DeviceMenuTemplate" DataType="device">
            <MenuItem Uid="{Binding XPath=@id}" IsEnabled="{Binding XPath=@isEnabled}" Header="{Binding XPath=name}">
                <MenuItem.Icon>
                    <p2:PixelSnappedImage Source="{Binding XPath=image}" Width="16" Height="16" />
                </MenuItem.Icon>
            </MenuItem>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel Margin="0,0,0,0" LastChildFill="False" Background="{StaticResource HeaderGradient}">

        <StackPanel DockPanel.Dock="Left" Margin="0,11,0,15">
            <p2:PixelSnappedImage MouseLeftButtonDown="Bitmap_MouseLeftButtonDown"  Source="../images/logo.png"  Width="184" Height="26" HorizontalAlignment="left" VerticalAlignment="Top" />
        </StackPanel>

        <Menu DockPanel.Dock="Right" Margin="0,7,0,0"  VerticalAlignment="Top" Style="{StaticResource BCMenu}">
            <MenuItem Header="Tools" ItemTemplate="{StaticResource DeviceMenuTemplate}">
                <MenuItem Header="Options" Click="MenuItem_Click" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="Account" ItemTemplate="{StaticResource DeviceItemMenuTemplate}">
                    <MenuItem Click="MenuItem_Click_3" Header="Add a person" ItemTemplate="{StaticResource DeviceItemMenuTemplate}">
                        <MenuItem.Icon>
                            <p2:PixelSnappedImage Source="../images/icn_add.png" Width="16" Height="16" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Remvoe a person" Click="MenuItem_Click_1" ItemTemplate="{StaticResource DeviceItemMenuTemplate}">
                        <MenuItem.Icon>
                            <p2:PixelSnappedImage Source="../images/icn_remove.png" Width="16" Height="16" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Click="MenuItem_Click_3" Header="Go to HealthVault account" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                </MenuItem>
                <MenuItem Click="MenuItem_Click_4"  Header="Check for updates" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="Add Weight Gadget" Click="MenuItem_Click_6" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <Separator Padding="0" Margin="0" />
                <MenuItem Header="Exit" Click="MenuItem_Click_2" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
            </MenuItem>
            <MenuItem Header="Help" ItemTemplate="{StaticResource DeviceMenuTemplate}">
                <MenuItem Header="Get help online" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="Troubleshooting" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="Send feedback" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <Separator Padding="0" Margin="0" />
                <MenuItem Header="View privacy statement" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="View terms of use" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <MenuItem Header="CEIP terms" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
                <Separator Padding="0" Margin="0" />
                <MenuItem Header="About…" Click="MenuItem_Click_5" ItemTemplate="{StaticResource DeviceItemMenuTemplate}" />
            </MenuItem>
        </Menu>
    </DockPanel>
</UserControl>