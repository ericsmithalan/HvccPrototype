<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ghst_img="clr-namespace:Ghost.Imaging"
    xmlns:converter="clr-namespace:Ghost.Converter"
    xmlns:files="clr-namespace:Ghost.Files"
    xmlns:ghost="clr-namespace:Ghost"
    xmlns:ctl="clr-namespace:Ghost.Controls">

    <!-- COLORS -->

    <!-- menu bar -->
    <SolidColorBrush x:Key="DarkestGray" Color="#333333" />
    <SolidColorBrush x:Key="DarkGray" Color="#444444" />
    <SolidColorBrush x:Key="MidDarkGray" Color="#555555" />
    <SolidColorBrush x:Key="MidGray" Color="#666666" />
    <SolidColorBrush x:Key="MidLightGray" Color="#777777" />
    <SolidColorBrush x:Key="LightGray" Color="#888888" />

    <converter:Arithmetic x:Key="arithConverter" />
    <converter:UriToBitmap x:Key="uriBitmapConverter" />

    <ObjectDataProvider x:Key="FileCollection" ObjectType="{x:Type files:ImageCollection}" />

    <LinearGradientBrush x:Key="PopUpMenuItemGrad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#666666" Offset="0.0" />
                <GradientStop Color="#333333" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PopUpMenuItemGradHvr" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#888888" Offset="0.0" />
                <GradientStop Color="#555555" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <DataTemplate x:Key="FileMenuItemTemplate" DataType="{x:Type files:Image}">
        <Border x:Name="Border" BorderBrush="#555555" HorizontalAlignment="Left" Background="{x:Null}"  BorderThickness="0,0,0,1" Margin="0,0,0,1"  Padding="5">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <ghst_img:PixelSnappedImage VerticalAlignment="Center" Width="30" Source="{Binding Path=Source, Converter={StaticResource uriBitmapConverter}}" />
                <TextBlock Margin="8,0,10,0" VerticalAlignment="Center" FontFamily="Arial" Foreground="#ffffff" TextWrapping="NoWrap" Width="150" TextTrimming="CharacterEllipsis"  FontSize="12" ToolTip="{Binding Path=FileName}" Text="{Binding Path=FileName}" ></TextBlock>
            </StackPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PopUpMenuItemGradHvr}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ControlItemTemplate" DataType="{x:Type UserControl}">
        <Border x:Name="Border" BorderBrush="#555555" HorizontalAlignment="Left" Background="{x:Null}"  BorderThickness="0,0,0,1" Margin="0,0,0,1"  Padding="5">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Margin="8,0,10,0" VerticalAlignment="Center" FontFamily="Arial" Foreground="#ffffff" TextWrapping="NoWrap" Width="150" TextTrimming="CharacterEllipsis"  FontSize="12" ToolTip="{Binding Path=ToolTip}" Text="{Binding Path=ToolTip}" ></TextBlock>
            </StackPanel>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PopUpMenuItemGradHvr}" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <LinearGradientBrush x:Key="HScrollGrad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#555555" Offset="0.0" />
                <GradientStop Color="#333333" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HScrollGradHvr" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777777" Offset="0.0" />
                <GradientStop Color="#555555" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VScrollGrad" StartPoint="1,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#555555" Offset="0.0" />
                <GradientStop Color="#333333" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VScrollGradHvr" StartPoint="1,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777777" Offset="0.0" />
                <GradientStop Color="#555555" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuGrad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#555555" Offset="0.0" />
                <GradientStop Color="#333333" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopUpGrad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#333333" Offset="0.0" />
                <GradientStop Color="#111111" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonGrad" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#666666" Offset="0.0" />
                <GradientStop Color="#333333" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradHvr" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777777" Offset="0.0" />
                <GradientStop Color="#555555" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradPress" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#333333" Offset="0.0" />
                <GradientStop Color="#666666" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradSel" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ff9f4a" Offset="0.0" />
                <GradientStop Color="#ff7800" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradSelHvr" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ffac63" Offset="0.0" />
                <GradientStop Color="#ff8b24" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradSelPress" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ff7800" Offset="0.0" />
                <GradientStop Color="#ff9f4a" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SliderGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777777" Offset="0.0" />
                <GradientStop Color="#555555" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SliderGradHvr" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#888888" Offset="0.0" />
                <GradientStop Color="#666666" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- TEXT -->

    <!-- WINDOW -->
    <Style x:Key="WindowBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkGray}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="WindowInnerBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource MidLightGray}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!-- TOOLBAR BUTTON -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="1" Stroke="{StaticResource DarkGray}" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type ctl:Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:Button}">
                    <Border
                        x:Name="Border"
                        SnapsToDevicePixels="True"
                        CornerRadius="3"
                        BorderThickness="1"
                        Background="{StaticResource ButtonGrad}"
                        BorderBrush="{StaticResource DarkGray}">

                        <StackPanel
                            Margin="0,1,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <ghst_img:PixelSnappedImage
                                x:Name="Icon"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{Binding Icon, RelativeSource={RelativeSource FindAncestor,AncestorType=Button}}"
                                Width="15"
                                Height="14" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MidGray}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradSel}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding SelectedIcon, RelativeSource={RelativeSource FindAncestor,AncestorType=Button}}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradHvr}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding HoverIcon, RelativeSource={RelativeSource FindAncestor,AncestorType=Button}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradPress}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkestGray}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradSelHvr}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding HoverIcon, RelativeSource={RelativeSource FindAncestor,AncestorType=Button}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkestGray}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradSelPress}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding HoverIcon, RelativeSource={RelativeSource FindAncestor,AncestorType=Button}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Opacity" Value=".5" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkGray}" />
                        </Trigger>
                        <Trigger Property="IsDropdown" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="3,0,0,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboButton -->

    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <StackPanel Background="{x:Null}"  ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type ctl:ButtonMenu}">
        <Border
                        x:Name="Border"
                        SnapsToDevicePixels="True"
                        CornerRadius="0,3,3,0"

                        BorderThickness="0,1,1,1"
                        Background="{StaticResource ButtonGrad}"
                        BorderBrush="{StaticResource DarkGray}">

            <StackPanel
                            Background="{x:Null}"
                            Orientation="Horizontal"
                            Margin="0,1,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                <ContentPresenter Visibility="Collapsed" Grid.Column="0" Name="Icon" Margin="0,-2,3,0" HorizontalAlignment="Left" VerticalAlignment="Top" ContentSource="Icon" />
                <ContentPresenter Visibility="Collapsed" Grid.Column="1" HorizontalAlignment="Left" ContentSource="Header" RecognizesAccessKey="True" />

                <Path VerticalAlignment="Top" SnapsToDevicePixels="True" Margin="0,2,0,0" x:Name="Path" HorizontalAlignment="Left" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#989898">
                    <Path.LayoutTransform>
                        <RotateTransform Angle="90" CenterX="0" CenterY="0" />
                    </Path.LayoutTransform>
                </Path>
                <Popup Name="Popup" MaxHeight="300" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" VerticalOffset="5" HorizontalOffset="-7">
                    <Border HorizontalAlignment="Left" Margin="20"  Padding="10" Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource PopUpGrad}" BorderBrush="#333333" BorderThickness="1">
                        <ScrollViewer>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left"  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>

            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Path" Property="Fill" Value="#e8e8e8" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradHvr}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkGray}" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkGray}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.IsOpen" Value="True">
                <Setter TargetName="Path" Property="Fill" Value="#e8e8e8" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MidGray}" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonGradSel}" />
            </Trigger>

            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="5,5,5,5" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border Name="Border" Padding="15,1,15,1">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter Name="Icon" Margin="0,0,9,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Name="HeaderHost" Grid.Column="1" TextBlock.FontWeight="Normal" ContentSource="Header" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- SLIDER -->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Name="Ellipse" Fill="{StaticResource SliderGradient}" Stroke="{StaticResource DarkGray}" StrokeThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource SliderGradHvr}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Fill="{StaticResource LightGray}" Height="4" Visibility="Collapsed" />
            <Border Name="TrackBackground" Margin="0" CornerRadius="2" Height="4" Grid.Row="1" Background="{StaticResource LightGray}" BorderBrush="{StaticResource LightGray}" BorderThickness="1" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="#999999" Placement="Bottom" Height="4" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="1" CornerRadius="1" BorderThickness="1" Background="Transparent">
                        <Path Name="Path" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#777777" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Path" Property="Fill" Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#999999" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Path" CornerRadius="0" BorderThickness="1" BorderBrush="#666666" Background="{StaticResource VScrollGrad}" />
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="BorderBrush" Value="#666666" />
                            <Setter TargetName="Path" Property="Background" Value="{StaticResource VScrollGradHvr}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border x:Name="Border" Grid.RowSpan="3" CornerRadius="0" Background="{StaticResource VScrollGrad}" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.LineUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.LineDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource VScrollGrad}" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.LineLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.LineRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="GhostScroll" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                                       Margin="5,0,0,0"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>